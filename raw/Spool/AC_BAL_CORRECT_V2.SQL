set buffer 10000000
SET SERVEROUT OFF
spool c:\AC_BAL_CHECK.SPL
accept BRN prompt 'Enter the branch code :'
accept AC prompt 'Enter the ACCOUNT code :'


DECLARE
	L_ACY_CURR_BAL		ACTB_DAILY_LOG.LCY_AMOUNT%TYPE  := 0;
	L_LCY_CURR_BAL		ACTB_DAILY_LOG.LCY_AMOUNT%TYPE  := 0;
	L_ACY_HIST_BAL		ACTB_DAILY_LOG.LCY_AMOUNT%TYPE  := 0;
	L_LCY_HIST_BAL		ACTB_DAILY_LOG.LCY_AMOUNT%TYPE  := 0;
	L_ACY_ACCBAL		ACTB_DAILY_LOG.LCY_AMOUNT%TYPE  := 0;
	L_LCY_ACCBAL		ACTB_DAILY_LOG.LCY_AMOUNT%TYPE  := 0;
	L_UNCOLLECTED		ACTB_DAILY_LOG.LCY_AMOUNT%TYPE  := 0;
	L_ACY_UNAUTH_DR		ACTB_DAILY_LOG.LCY_AMOUNT%TYPE  := 0;
	L_ACY_UNAUTH_CR		ACTB_DAILY_LOG.LCY_AMOUNT%TYPE  := 0;
	L_ACY_TANK_DR		ACTB_DAILY_LOG.LCY_AMOUNT%TYPE  := 0;
	L_ACY_TANK_CR		ACTB_DAILY_LOG.LCY_AMOUNT%TYPE  := 0;
	L_LCY_TANK_DR		ACTB_DAILY_LOG.LCY_AMOUNT%TYPE  := 0;
	L_LCY_TANK_CR		ACTB_DAILY_LOG.LCY_AMOUNT%TYPE  := 0;	
	L_ACY_UNAUTH_TANK_CR	ACTB_DAILY_LOG.LCY_AMOUNT%TYPE  := 0;
	L_ACY_UNAUTH_TANK_DR	ACTB_DAILY_LOG.LCY_AMOUNT%TYPE  := 0;
	L_ACY_VD_BAL		ACTB_DAILY_LOG.LCY_AMOUNT%TYPE  := 0;
	L_LCY_VD_BAL		ACTB_DAILY_LOG.LCY_AMOUNT%TYPE  := 0;
	L_ACY_UNAUTH_UNCOLLECTED 	ACTB_DAILY_LOG.LCY_AMOUNT%TYPE  := 0;
	L_ACY_TANK_UNCOLLECTED   	ACTB_DAILY_LOG.LCY_AMOUNT%TYPE  := 0;
	L_ACY_UNAUTH_TANK_UNCOLLECTED 	ACTB_DAILY_LOG.LCY_AMOUNT%TYPE  := 0;

	L_BRN_STAT		STTM_BRANCH.END_OF_INPUT%TYPE;
	L_VD_UPDATION		CSTBS_PARAM.PARAM_VAL%TYPE;
	L_BRN			VARCHAR2(3) := '&BRN';
	L_AC_NO                 VARCHAR2(100) := '&AC';
	L_UPDATE		BOOLEAN  := FALSE;

BEGIN
	GLOBAL.PR_INIT(L_BRN,'SYSTEM');

	SELECT 	END_OF_INPUT
	INTO 	L_BRN_STAT	
	FROM 	STTM_BRANCH
	WHERE 	BRANCH_CODE = L_BRN;
	
	BEGIN
		SELECT  PARAM_VAL
		INTO    L_VD_UPDATION
		FROM    CSTBS_PARAM
		WHERE   PARAM_NAME  = 'VDBAL_UPDATE';
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			L_VD_UPDATION := 'OFFLINE';
	END;


	
	FOR I IN 	(SELECT * FROM STTM_CUST_ACCOUNT
			WHERE BRANCH_CODE =  L_BRN
			AND   CUST_AC_NO       = NVL(L_AC_NO,CUST_AC_NO)
			AND   RECORD_STAT = 'O'
			AND   AUTH_STAT   = 'A'
			)
	LOOP
		BEGIN
			SELECT 	SUM(DECODE(DRCR_IND,'D',-1,1)*DECODE(I.CCY,GLOBAL.LCY,LCY_AMOUNT,FCY_AMOUNT))	,
				SUM(DECODE(DRCR_IND,'D',-1,1)*LCY_AMOUNT)					,
				SUM(DECODE(DLY_HIST,'H',1,0)*
				    DECODE(DRCR_IND,'D',-1,1)*
                                    DECODE(I.CCY,GLOBAL.LCY,LCY_AMOUNT,FCY_AMOUNT))				,
				SUM(DECODE(DLY_HIST,'H',1,0)*
                                    DECODE(DRCR_IND,'D',-1,1)*LCY_AMOUNT)					,
				SUM(DECODE(AUTH_STAT,'A',0,1)*
				    DECODE(DRCR_IND,'D',1,0)*
				    DECODE(I.CCY,GLOBAL.LCY,LCY_AMOUNT,FCY_AMOUNT))				,
				SUM(DECODE(AUTH_STAT,'A',0,1)*
				    DECODE(DRCR_IND,'C',1,0)*
				    DECODE(I.CCY,GLOBAL.LCY,LCY_AMOUNT,FCY_AMOUNT))				,
				SUM(DECODE(DRCR_IND,'D',1,0)*
                                    DECODE(BALANCE_UPD,'T',1,0)*
				    DECODE(I.CCY,GLOBAL.LCY,LCY_AMOUNT,FCY_AMOUNT))				,
				SUM(DECODE(DRCR_IND,'D',1,0)*
                                    DECODE(BALANCE_UPD,'T',1,0)*LCY_AMOUNT)					,
				SUM(DECODE(DRCR_IND,'C',1,0)*
                                    DECODE(BALANCE_UPD,'T',1,0)*
				    DECODE(I.CCY,GLOBAL.LCY,LCY_AMOUNT,FCY_AMOUNT))				,
				SUM(DECODE(DRCR_IND,'C',1,0)*
                                    DECODE(BALANCE_UPD,'T',1,0)*LCY_AMOUNT)					,
				SUM(DECODE(DRCR_IND,'C',1,0)*
			            DECODE(AUTH_STAT,'A',0,1)*
                                    DECODE(BALANCE_UPD,'T',1,0)*
				    DECODE(I.CCY,GLOBAL.LCY,LCY_AMOUNT,FCY_AMOUNT))				,
				SUM(DECODE(DRCR_IND,'D',1,0)*
			            DECODE(AUTH_STAT,'A',0,1)*
                                    DECODE(BALANCE_UPD,'T',1,0)*
				    DECODE(I.CCY,GLOBAL.LCY,LCY_AMOUNT,FCY_AMOUNT))
			INTO	L_ACY_CURR_BAL		,
				L_LCY_CURR_BAL		,
				L_ACY_HIST_BAL		,
				L_LCY_HIST_BAL		,
				L_ACY_UNAUTH_DR		,
				L_ACY_UNAUTH_CR		,
				L_ACY_TANK_DR		,
				L_LCY_TANK_DR		,
				L_ACY_TANK_CR		,
				L_LCY_TANK_CR		,
				L_ACY_UNAUTH_TANK_CR	,
				L_ACY_UNAUTH_TANK_DR	
			FROM    ACVW_ALL_AC_ENTRIES
			WHERE   AC_BRANCH      	=  	I.BRANCH_CODE
			AND     AC_NO 		= 	I.CUST_AC_NO		;
		EXCEPTION
			WHEN NO_DATA_FOUND THEN
			     	L_ACY_CURR_BAL 	:= 0 	;	
				L_LCY_CURR_BAL	:= 0	;
			WHEN OTHERS THEN
				DBMS_OUTPUT.PUT_LINE('ERROR WHILE FETCHING THE DATA FROM AC ENTRY FOR '||I.CUST_AC_NO);
		END;
		
		DBMS_OUTPUT.PUT_LINE('L_ACY_CURR_BAL --> ' || L_ACY_CURR_BAL);
		DBMS_OUTPUT.PUT_LINE('L_LCY_CURR_BAL --> ' || L_LCY_CURR_BAL);
		DBMS_OUTPUT.PUT_LINE('L_ACY_HIST_BAL --> ' || L_ACY_HIST_BAL);
		DBMS_OUTPUT.PUT_LINE('L_LCY_HIST_BAL --> ' || L_LCY_HIST_BAL);
		DBMS_OUTPUT.PUT_LINE('L_ACY_UNAUTH_DR --> ' || L_ACY_UNAUTH_DR);
		DBMS_OUTPUT.PUT_LINE('L_ACY_UNAUTH_CR --> ' || L_ACY_UNAUTH_CR);
		DBMS_OUTPUT.PUT_LINE('L_ACY_TANK_DR --> ' || L_ACY_TANK_DR);
		DBMS_OUTPUT.PUT_LINE('L_ACY_TANK_CR --> ' || L_ACY_TANK_CR);
		DBMS_OUTPUT.PUT_LINE('L_LCY_TANK_DR --> ' || L_LCY_TANK_DR);
		DBMS_OUTPUT.PUT_LINE('L_LCY_TANK_CR --> ' || L_LCY_TANK_CR);
		DBMS_OUTPUT.PUT_LINE('L_ACY_UNAUTH_TANK_CR --> ' || L_ACY_UNAUTH_TANK_CR);
		DBMS_OUTPUT.PUT_LINE('L_ACY_UNAUTH_TANK_DR --> ' || L_ACY_UNAUTH_TANK_DR);
								

		BEGIN
			SELECT	SUM(DECODE(AUTH_STAT,'A',0,1)*
				    DECODE(DRCR_IND,'D',-1,1)*
				    DECODE(I.CCY,GLOBAL.LCY,LCY_AMOUNT,FCY_AMOUNT))	,
				SUM(DECODE(BALANCE_UPD,'T',1,0)*
				    DECODE(DRCR_IND,'D',-1,1)*
				    DECODE(I.CCY,GLOBAL.LCY,LCY_AMOUNT,FCY_AMOUNT))	,
				SUM(DECODE(AUTH_STAT,'A',0,1)*
				    DECODE(BALANCE_UPD,'T',1,0)*
				    DECODE(DRCR_IND,'D',-1,1)*
				    DECODE(I.CCY,GLOBAL.LCY,LCY_AMOUNT,FCY_AMOUNT))	
			INTO    L_ACY_UNAUTH_UNCOLLECTED,
				L_ACY_TANK_UNCOLLECTED,
				L_ACY_UNAUTH_TANK_UNCOLLECTED
			FROM 	ACVW_ALL_AC_ENTRIES
			WHERE 	AC_BRANCH      	=  	I.BRANCH_CODE
			AND     AC_NO 		= 	I.CUST_AC_NO	
			AND     VALUE_DT		>	GLOBAL.APPLICATION_DATE;
		EXCEPTION
			WHEN NO_DATA_FOUND THEN
				L_ACY_UNAUTH_UNCOLLECTED := 0	;
			WHEN OTHERS THEN
			DBMS_OUTPUT.PUT_LINE('ERROR WHILE FETCHING THE UNCOLLECTED DATA FROM AC ENTRY FOR '||I.CUST_AC_NO);
		END;
		
		DBMS_OUTPUT.PUT_LINE('L_ACY_UNAUTH_UNCOLLECTED --> ' || L_ACY_UNAUTH_UNCOLLECTED);
		DBMS_OUTPUT.PUT_LINE('L_ACY_TANK_UNCOLLECTED --> ' || L_ACY_TANK_UNCOLLECTED);
		DBMS_OUTPUT.PUT_LINE('L_ACY_UNAUTH_TANK_UNCOLLECTED --> ' || L_ACY_UNAUTH_TANK_UNCOLLECTED);
		


		BEGIN
			SELECT 	SUM(AMOUNT)
			INTO   	L_UNCOLLECTED	
			FROM   	ACTB_FUNCOL
			WHERE   BRANCH		=	I.BRANCH_CODE
			AND     ACCOUNT         =       I.CUST_AC_NO;

		EXCEPTION
			WHEN NO_DATA_FOUND THEN
				L_UNCOLLECTED := 0;
			WHEN OTHERS THEN 
				DBMS_OUTPUT.PUT_LINE('ERROR WHILE FETCHING THE DATA FROM ACTB_FUNCOL FOR '||I.CUST_AC_NO);
		END;

		DBMS_OUTPUT.PUT_LINE('L_UNCOLLECTED -->' || L_UNCOLLECTED);


		IF 	NVL(L_ACY_CURR_BAL,0) <> NVL(I.ACY_CURR_BALANCE,0)		OR
			NVL(L_LCY_CURR_BAL,0) <> NVL(I.LCY_CURR_BALANCE,0)		
		THEN
			L_UPDATE   := TRUE;

		END IF;
		
		IF	NVL(L_UNCOLLECTED,0) <> NVL(I.ACY_UNCOLLECTED,0)
		THEN
			L_UPDATE   := TRUE;
		END IF;
		
		
		IF	NVL(L_ACY_UNAUTH_CR,0) <> NVL(I.ACY_UNAUTH_CR,0)
		THEN
			L_UPDATE   := TRUE;
		END IF;

		
		IF 	L_BRN_STAT	= 'N' AND  ( 	NVL(L_ACY_TANK_CR,0) <> 0 	OR 
							NVL(L_ACY_TANK_DR,0) <> 0 	OR
							NVL(L_ACY_UNAUTH_TANK_CR,0) <> 0	
						   )
		THEN
			DBMS_OUTPUT.PUT_LINE('Untanking was not successful for account '||I.CUST_AC_NO);
		END IF;
			
		
		IF	NVL(L_ACY_TANK_CR,0) <> NVL(I.ACY_TANK_CR,0)
		THEN
			L_UPDATE   := TRUE;
		END IF;

		IF	NVL(L_LCY_TANK_CR,0) <> NVL(I.LCY_TANK_CR,0)
		THEN
			L_UPDATE   := TRUE;
		END IF;
	
		IF	NVL(L_ACY_TANK_DR,0) <> NVL(I.ACY_TANK_DR,0)
		THEN
			L_UPDATE   := TRUE;
		END IF;

		IF	NVL(L_LCY_TANK_DR,0) <> NVL(I.LCY_TANK_DR,0)
		THEN
			L_UPDATE   := TRUE;
		END IF;

		IF	NVL(L_ACY_UNAUTH_TANK_CR,0) <> NVL(I.ACY_UNAUTH_TANK_CR,0)
		THEN
			L_UPDATE   := TRUE;
		END IF;

		IF	NVL(L_ACY_UNAUTH_TANK_DR,0) <> NVL(I.ACY_UNAUTH_TANK_DR,0)
		THEN
			L_UPDATE   := TRUE;
		END IF;
		
		IF 	NVL(L_ACY_UNAUTH_UNCOLLECTED,0) <> NVL(I.ACY_UNAUTH_UNCOLLECTED,0)
		THEN
			L_UPDATE   := TRUE;
		END IF;

		IF 	NVL(L_ACY_TANK_UNCOLLECTED,0) <> NVL(I.ACY_TANK_UNCOLLECTED,0)
		THEN
			L_UPDATE   := TRUE;
		END IF;

		IF 	NVL(L_ACY_UNAUTH_TANK_UNCOLLECTED,0) <> NVL(I.ACY_UNAUTH_TANK_UNCOLLECTED,0)
		THEN
			L_UPDATE   := TRUE;
		END IF;

		IF NVL(I.ACY_AVL_BAL,0) <> ( 	NVL(I.ACY_CURR_BALANCE,0) 	-	 
						NVL(I.ACY_UNCOLLECTED,0)	- 
						NVL(I.ACY_UNAUTH_CR,0)		+ 
						NVL(I.ACY_UNAUTH_UNCOLLECTED,0) + 
						NVL(I.ACY_TANK_CR,0)		- 
						NVL(I.ACY_TANK_DR,0)		- 
						NVL(I.ACY_UNAUTH_TANK_CR,0)	- 
						NVL(I.ACY_TANK_UNCOLLECTED,0)	+  
						NVL(I.ACY_UNAUTH_TANK_UNCOLLECTED,0)
					    )
		THEN
			L_UPDATE   := TRUE;
		END IF;

		IF  L_UPDATE   = TRUE THEN

			UPDATE  STTM_CUST_ACCOUNT 
			SET     ACY_OPENING_BAL         =       NVL(L_ACY_HIST_BAL,0)	,
				LCY_OPENING_BAL         =       NVL(L_LCY_HIST_BAL,0)	,
				ACY_CURR_BALANCE	=  	NVL(L_ACY_CURR_BAL,0)	,
				LCY_CURR_BALANCE	=	NVL(L_LCY_CURR_BAL,0)	,
				ACY_UNCOLLECTED		=	NVL(L_UNCOLLECTED,0)	,
				ACY_UNAUTH_CR		=	NVL(L_ACY_UNAUTH_CR,0)	,
				ACY_UNAUTH_UNCOLLECTED	=	NVL(L_ACY_UNAUTH_UNCOLLECTED,0)	,
				ACY_TANK_CR		=	NVL(L_ACY_TANK_CR,0)		,
				LCY_TANK_CR		=	NVL(L_LCY_TANK_CR,0)		,
				ACY_TANK_DR		=	NVL(L_ACY_TANK_DR,0)		,
				LCY_TANK_DR		=	NVL(L_LCY_TANK_DR,0)		,
				ACY_UNAUTH_TANK_CR	=	NVL(L_ACY_UNAUTH_TANK_CR,0)	,
				ACY_UNAUTH_TANK_DR	=	NVL(L_ACY_UNAUTH_TANK_DR,0)	,
				ACY_TANK_UNCOLLECTED	=	NVL(L_ACY_TANK_UNCOLLECTED,0)	,
				ACY_UNAUTH_TANK_UNCOLLECTED	=	NVL(L_ACY_UNAUTH_TANK_UNCOLLECTED,0)
			WHERE   BRANCH_CODE  		=	I.BRANCH_CODE
			AND     CUST_AC_NO		=	I.CUST_AC_NO;

			UPDATE  STTM_CUST_ACCOUNT 
			SET ACY_AVL_BAL =  	NVL(ACY_CURR_BALANCE,0) 	-	 
						NVL(ACY_UNCOLLECTED,0)	- 
						NVL(ACY_UNAUTH_CR,0)		+ 
						NVL(ACY_UNAUTH_UNCOLLECTED,0) + 
						NVL(ACY_TANK_CR,0)		- 
						NVL(ACY_TANK_DR,0)		- 
						NVL(ACY_UNAUTH_TANK_CR,0)	- 
						NVL(ACY_TANK_UNCOLLECTED,0)	+  
						NVL(ACY_UNAUTH_TANK_UNCOLLECTED,0)
			WHERE   BRANCH_CODE  		=	I.BRANCH_CODE
			AND     CUST_AC_NO		=	I.CUST_AC_NO ;
			
			COMMIT;


			L_UPDATE   := FALSE;
		END IF;
		

	END LOOP;
END;
/

		
SPOOL OFF
	